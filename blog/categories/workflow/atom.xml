<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: workflow | John Ramey]]></title>
  <link href="http://ramhiser.com/blog/categories/workflow/atom.xml" rel="self"/>
  <link href="http://ramhiser.com/"/>
  <updated>2013-07-01T22:17:59-07:00</updated>
  <id>http://ramhiser.com/</id>
  <author>
    <name><![CDATA[John Ramey]]></name>
    <email><![CDATA[johnramey@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Setting Up the Development Version of R]]></title>
    <link href="http://ramhiser.com/blog/2012/08/28/setting-up-the-development-version-of-r/"/>
    <updated>2012-08-28T20:42:00-07:00</updated>
    <id>http://ramhiser.com/blog/2012/08/28/setting-up-the-development-version-of-r</id>
    <content type="html"><![CDATA[<p>My <a href="http://rglab.org">coworkers</a> at <a href="http://fhcrc.org">Fred Hutchinson</a> regularly use
the development version of <a href="http://www.r-project.org/">R</a> (i.e., <code>R-devel</code>) and have urged me to do the same.
This post details how I have set up the development version of R on our Linux server,
which I use remotely because it is much faster than my Mac.</p>

<p>First, I downloaded the <code>R-devel</code> source into <code>~/local/</code>, which is short for <code>/home/jramey/local/</code> via Subversion, configured my
installation, and compiled the source. I recommend these <a href="http://developer.r-project.org/SVNtips.html">Subversion tips</a>
if you are building from source. Here are the commands to install <code>R-devel</code>.</p>

<p><code>bash
svn co https://svn.r-project.org/R/trunk ~/local/R-devel
cd ~/local/R-devel
./tools/rsync-recommended
./configure --prefix=/home/jramey/local/
make
make install
</code></p>

<p>The third command downloads the recommended R packages and is crucial because the source for the recommended R packages is not included in the SVN repository. For more about this, <a href="http://cran.r-project.org/doc/manuals/R-admin.html#Using-Subversion-and-rsync">go here</a>.</p>

<p>We have the release version (currently, it is 2.15.1) installed in <code>/usr/local/bin</code>. But the goal here is to give priority to <code>R-devel</code>. So, I add the following to my <code>~/.bashrc</code> file:</p>

<p>``` bash
PATH=~/local/bin:$PATH
export PATH</p>

<h1 id="never-save-or-restore-when-running-r">Never save or restore when running R</h1>
<p>alias R=’R –no-save –no-restore-data –quiet’
```</p>

<p>Notice that the last line that I add to my <code>~/.bashrc</code> file is to load <code>R-devel</code> quietly without saving or restoring.</p>

<p>Next, I install the R packages that I use the most.</p>

<p><code>r
install.packages(c('devtools', 'ProjectTemplate', 'knitr', 'ggplot2', 'reshape2',
                   'plyr', 'Rcpp', 'mvtnorm', 'caret'), dep = TRUE)
</code></p>

<p>Then, I update my <code>.Rprofile</code> file, which I keep in a Github gist.</p>

<p>{% gist 1378639 .bash_profile %}</p>

<p>Finally, my <a href="http://rglab.org">coworkers</a> focus on <a href="http://en.wikipedia.org/wiki/Flow_cytometry">flow cytometry</a> data, and our group
maintains several <a href="http://www.bioconductor.org/">Bioconductor</a> packages related to this type of data. To install the majority of
them, we simply install the <a href="http://www.bioconductor.org/packages/2.10/bioc/html/flowWorkspace.html">flowWorkspace</a> package in R:</p>

<p><code>r
source("http://bioconductor.org/biocLite.R")
biocLite("flowWorkspace")
</code></p>
]]></content>
  </entry>
  
</feed>
