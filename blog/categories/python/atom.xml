<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Python | John Ramey]]></title>
  <link href="http://ramhiser.com/blog/categories/python/atom.xml" rel="self"/>
  <link href="http://ramhiser.com/"/>
  <updated>2013-07-01T21:33:08-07:00</updated>
  <id>http://ramhiser.com/</id>
  <author>
    <name><![CDATA[John Ramey]]></name>
    <email><![CDATA[johnramey@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[How to Download Kaggle Data with Python and requests.py]]></title>
    <link href="http://ramhiser.com/blog/2012/11/23/how-to-download-kaggle-data-with-python-and-requests-dot-py/"/>
    <updated>2012-11-23T10:08:00-08:00</updated>
    <id>http://ramhiser.com/blog/2012/11/23/how-to-download-kaggle-data-with-python-and-requests-dot-py</id>
    <content type="html"><![CDATA[<p>Recently I started playing with <a href="http://kaggle.com">Kaggle</a>. I quickly became frustrated that in order to download their data I had to use their website. I prefer instead the option to download the data programmatically. After some Googling, <a href="http://www.kaggle.com/c/ClaimPredictionChallenge/forums/t/772/downloading-the-data-from-kaggle-to-remote-linux-instance">the best recommendation I found</a> was to use <a href="http://en.wikipedia.org/wiki/Lynx_(web_browser)">lynx</a>. <a href="http://twitter.com/amcclosky">My friend Anthony</a> recommended that alternatively I should write a Python script.</p>

<p>Although Python is not my primary language, I was intrigued by how simple it was to write the script using <a href="http://docs.python-requests.org/">requests.py</a>. In this example, I download the training data set from <a href="http://www.kaggle.com/c/digit-recognizer/data">Kaggle’s Digit Recognizer competition</a>.</p>

<p>The idea is simple:</p>

<ol>
  <li>Attempt to download a file from Kaggle but get blocked because you are not logged in.</li>
  <li>Login with <a href="http://docs.python-requests.org/">requests.py</a>.</li>
  <li>Download the data.</li>
</ol>

<p>Here’s the code:</p>

<p><div><script src='https://gist.github.com/4121260.js?file='></script>
<noscript><pre><code>import requests

# The direct link to the Kaggle data set
data_url = 'http://www.kaggle.com/c/digit-recognizer/download/train.csv'

# The local path where the data set is saved.
local_filename = &quot;train.csv&quot;

# Kaggle Username and Password
kaggle_info = {'UserName': &quot;my_username&quot;, 'Password': &quot;my_password&quot;}

# Attempts to download the CSV file. Gets rejected because we are not logged in.
r = requests.get(data_url)

# Login to Kaggle and retrieve the data.
r = requests.post(r.url, data = kaggle_info, prefetch = False)

# Writes the data to a local file one chunk at a time.
f = open(local_filename, 'w')
for chunk in r.iter_content(chunk_size = 512 * 1024): # Reads 512KB at a time into memory
    if chunk: # filter out keep-alive new chunks
        f.write(chunk)
f.close()
</code></pre></noscript></div>
</p>

<p>Simply change <code>my_username</code> and <code>my_password</code> to your Kaggle login info. Feel free to optimize the chunk size to your liking.</p>
]]></content>
  </entry>
  
</feed>
